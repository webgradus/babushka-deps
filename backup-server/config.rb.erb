# encoding: utf-8
require 'yaml'
##
# Backup
# Generated Main Config Template
#
# For more information:
#
# View the Git repository at https://github.com/meskyanichi/backup
# View the Wiki/Documentation at https://github.com/meskyanichi/backup/wiki
# View the issue log at https://github.com/meskyanichi/backup/issues

##
# Utilities
#
# If you need to use a utility other than the one Backup detects,
# or a utility can not be found in your $PATH.
#
#   Backup::Utilities.configure do
#     tar       '/usr/bin/gnutar'
#     redis_cli '/opt/redis/redis-cli'
#   end

##
# Logging
#
# Logging options may be set on the command line, but certain settings
# may only be configured here.
#
#   Backup::Logger.configure do
#     console.quiet     = true            # Same as command line: --quiet
#     logfile.max_bytes = 2_000_000       # Default: 500_000
#     syslog.enabled    = true            # Same as command line: --syslog
#     syslog.ident      = 'my_app_backup' # Default: 'backup'
#   end
#
# Command line options will override those set here.
# For example, the following would override the example settings above
# to disable syslog and enable console output.
#   backup perform --trigger my_backup --no-syslog --no-quiet

##
# Component Defaults
#
# Set default options to be applied to components in all models.
# Options set within a model will override those set here.
#
backupconfig = YAML::load(ERB.new(IO.read(File.join('root','Backup','config', 'backup.yml'))).result)

   Backup::Storage::S3.defaults do |s3|
     s3.access_key_id     = backupconfig['s3']['access_key_id']
     s3.secret_access_key = backupconfig['s3']['secret_access_key_id']
     s3.bucket            = backupconfig['s3']['bucket']
     s3.region            = "us-east-1"
     s3.keep              = 10 
   end

   Backup::Notifier::Mail.defaults do |mail|
     mail.on_success       = true
     mail.on_warning       = true
     mail.on_failure       = true

     mail.from             = backupconfig['mail']['username']
     mail.to               = backupconfig['mail']['username']
     mail.address          = "smtp.gmail.com"
     mail.port             = 587
     mail.user_name        = backupconfig['mail']['username']
     mail.password         = backupconfig['mail']['password']
     mail.authentication   = "plain"
     mail.encryption       = :starttls
   end
   
   Backup::Compressor::Gzip.defaults do |compression|
     compression.level = 6
   end

   Backup::Database::MySQL.defaults do |db|
     db.username = backupconfig['database']['mysql']['username']
     db.password = backupconfig['database']['mysql']['password']
   end

   Backup::Database::PostgreSQL.defaults do |db|
     db.username = backupconfig['database']['postgresql']['username']
     db.password = backupconfig['database']['postgresql']['password']
     db.host     = backupconfig['database']['postgresql']['host']
   end

   

#
#   Backup::Encryptor::OpenSSL.defaults do |encryption|
#     encryption.password = "my_password"
#     encryption.base64   = true
#     encryption.salt     = true
#   end


# * * * * * * * * * * * * * * * * * * * *
#        Do Not Edit Below Here.
# All Configuration Should Be Made Above.

##
# Load all models from the models directory.
Dir[File.join(File.dirname(Config.config_file), "models", "*.rb")].each do |model|
  instance_eval(File.read(model))
end
