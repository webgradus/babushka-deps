# !!!config valid only for Capistrano 3.1!!!
lock '3.1.0'

set :application, "<%= app_name %>"
set :repo_url, "ssh://<%= git_username %>@gitent-scm.com/git/gradus/#{fetch(:application)}"

# ask :branch, proc { `git rev-parse --abbrev-ref HEAD`.chomp }

set :deploy_to, "/opt/#{fetch(:application)}"
set :scm, :git
set :ssh_options, :forward_agent => true
set :rails_env, "production"
set :unicorn_config_path, -> { File.join(current_path, "config", "unicorn.rb") }
set :unicorn_pid, -> { File.join(shared_path, "tmp", "pids", "unicorn.pid") }

# set :format, :pretty
# set :log_level, :debug
# set :pty, true
# set :user, "root"
# set :use_sudo, false

set :linked_files, %w{config/database.yml}
set :linked_dirs, %w{log tmp/pids tmp/sockets public/spree}

# set :default_env, { path: "/opt/ruby/bin:$PATH" }
set :keep_releases, 5

# ----- RVM ----------
set :rvm_type, :system
set :rvm_ruby_version, '<%= ruby_version %>'

# - for unicorn - #
namespace :foreman do
  desc "Export the Procfile to Ubuntu's upstart scripts"
  task :export do
    on roles(:app) do
      run "cd #{current_path} && bundle exec foreman export initscript /etc/init.d " +
      "-f ./Procfile.production -a #{fetch(:application)} -u #{user} -l #{shared_path}/log" rescue nil
      run "chmod 755 /etc/init.d/#{fetch(:application)}"
    end
  end

  desc "Start the application services"
  task :start do
    on roles(:app) do
      sudo "/etc/init.d/#{fetch(:application)} start"
    end
  end

  desc "Stop the application services"
  task :stop do
    on roles(:app) do
      sudo "/etc/init.d/#{fetch(:application)} stop"
    end
  end

  desc "Restart the application services"
  task :restart do
    on roles(:app) do
      sudo "/etc/init.d/#{fetch(:application)} stop; /etc/init.d/#{fetch(:application)} start"
    end
  end

  desc "Display logs for a certain process - arg example: PROCESS=web-1"
  task :logs do
    on roles(:app) do
      run "cd #{current_path}/log && cat #{ENV["PROCESS"]}.log"
    end
  end
end

# deploy with foreman#
#
namespace :deploy do

  after :publishing, 'foreman:export'
  after :finishing, 'deploy:cleanup'
  
  desc "Zero-downtime restart of Unicorn"
  task :restart, :except => { :no_release => true } do
    foreman.restart
  end

  desc "Start unicorn"
  task :start, :except => { :no_release => true } do
    foreman.start
  end

  desc "Stop unicorn"
  task :stop, :except => { :no_release => true } do
    foreman.stop
  end
end

